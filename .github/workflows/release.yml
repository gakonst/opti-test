name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Publish to NPM or create release pull request
        uses: changesets/action@master
        id: release
        with:
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Conditional on the release being executed, we unbundle the variables
      - name: Get version tags from each published version
        id: packages
        if: steps.release.outputs.published == 'true'
        run: |
          # this sets a matrix up as well as a builder env var
          node ops/scripts/ci-versions.js {{ toJSON(steps.release.outputs.publishedPackages) }}

  # builder job -> run only if the builder env var is set -> upload it
  # matrix: if name is not l2geth -> download the builder artifact
  # https://github.com/docker/build-push-action/issues/225#issuecomment-727639184
  # https://github.com/PlaceOS/PlaceOS/pull/13/files
  l2geth:
    name: Publishes l2geth to DockerHub
    needs: release
    # if: needs.release.outputs.l2geth != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: L2Geth Version
        run: |
          echo ${{ needs.release.outputs }}
          echo ${{ needs.release.outputs.l2geth }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Publish L2Geth
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ops/docker/Dockerfile.geth
          push: true
          tags: ethereumoptimism/l2geth
