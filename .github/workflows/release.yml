name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Publish to NPM or create release pull request
        uses: changesets/action@master
        id: release
        with:
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Conditional on the release being executed, we unbundle some env vars
      - name: Get version tags from each published version
        id: packages
        if: steps.release.outputs.published == 'true'
        run: |
          DATA=${{ toJSON(steps.release.outputs.publishedPackages) }}
          echo $DATA
          # echo "::set-output name=l2geth::$(echo $DATA | jq )"
          # array of { name: @eth-optimism/l2geth, version: 0.2.10 } ->
          # l2geth=0.2.10

          # # if published -> login to dockerhub
          # - name: Login to Docker Hub
          #   if: steps.release.published == true
          #   uses: docker/login-action@v1
          #   with:
          #     username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          #     password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

          # - name: Set up Docker Buildx
          #   if: steps.release.published == true
          #   uses: docker/setup-buildx-action@v1

          # - name: Publish L2Geth
          #   id: docker_build
          #   uses: docker/build-push-action@v2
          #   with:
          #     context: .
          #     file: ./ops/docker/Dockerfile.geth
          #     push: true
          #     tags: ethereumoptimism/l2geth
